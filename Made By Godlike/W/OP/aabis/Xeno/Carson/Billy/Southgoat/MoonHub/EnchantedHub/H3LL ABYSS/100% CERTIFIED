local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "MoonHub",
   Icon = 0,
   LoadingTitle = "Best Current Script",
   LoadingSubtitle = "By Godlike",
   Theme = "Serenity",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "0",
      RememberJoins = false
   },
   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

-- Create Tabs
local TabLanguages = Window:CreateTab("Languages", "rewind")
local TabMain = Window:CreateTab("Main", "rewind")
local TabSpeedandSize = Window:CreateTab("Speed and Size", "rewind")
local TabAntiShi = Window:CreateTab("Anti Shi", "rewind")
local TabBoosters = Window:CreateTab("Boosters", "rewind")
local TabAutoWeight = Window:CreateTab("Auto Weights", "rewind")
local TabAutoRebirth = Window:CreateTab("Auto Rebirth", "rewind")
local TabAutoKill = Window:CreateTab("Auto Kill", "rewind")
local TabAutoRock = Window:CreateTab("Auto Rock Normal", "rewind")
local TabAutoRockFast = Window:CreateTab("Fast Glitch", "rewind")
local TabOPtools = Window:CreateTab("OP TOOLS!!", "rewind")
local TabMisc = Window:CreateTab("Misc V1", "rewind")
local TabMiscV2 = Window:CreateTab("Misc V2", "rewind")
local TabLinkedScripts = Window:CreateTab("Linked Scripts", "rewind")
local TabDiscord = Window:CreateTab("Cool Discord Servers", "rewind")
local TabCredits = Window:CreateTab("Credits", "rewind")

-- Example Button in Languages tab
local FrenchButton = TabLanguages:CreateButton({
    Name = "French",
    Callback = function()
        -- Add your code here
    end
})

-- Initialize global flags
_G.AutoSize = false
_G.AutoSpeed = false
_G.FastTools = false

-- ==========================
-- Fast Tools Button
local fastToolsButton = TabMain:CreateButton({
    Name = "Fast Tools",
    Callback = function()
        local Value = not _G.FastTools
        _G.FastTools = Value
        local defaultSpeeds = {
            {"Punch", "attackTime", Value and 0 or 0.35},
            {"Ground Slam", "attackTime", Value and 0 or 6},
            {"Stomp", "attackTime", Value and 0 or 7},
            {"Handstands", "repTime", Value and 0 or 1},
            {"Pushups", "repTime", Value and 0 or 1},
            {"Weight", "repTime", Value and 0 or 1},
            {"Situps", "repTime", Value and 0 or 1}
        }
        local player = game.Players.LocalPlayer
        local backpack = player:WaitForChild("Backpack")
        for _, toolInfo in ipairs(defaultSpeeds) do
            local tool = backpack:FindFirstChild(toolInfo[1])
            if tool and tool:FindFirstChild(toolInfo[2]) then
                tool[toolInfo[2]].Value = toolInfo[3]
            end
            local equippedTool = player.Character and player.Character:FindFirstChild(toolInfo[1])
            if equippedTool and equippedTool:FindFirstChild(toolInfo[2]) then
                equippedTool[toolInfo[2]].Value = toolInfo[3]
            end
        end
    end
})

-- ==========================
-- AutoLift Pass Button
local autoLiftButton = TabMain:CreateButton({
    Name = "Free AutoLift Pass",
    Callback = function()
        local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
        local player = game:GetService("Players").LocalPlayer
        local ownedPasses = player:FindFirstChild("ownedGamepasses") or player:WaitForChild("PlayerGui") -- fallback
        for _, gamepass in pairs(gamepassFolder:GetChildren()) do
            local value = Instance.new("IntValue")
            value.Name = gamepass.Name
            value.Value = gamepass.Value
            value.Parent = ownedPasses
        end
    end
})

-- ==========================
-- Walk On Water Toggle
local walkOnWaterToggle = TabMain:CreateToggle({
    Name = "Walk On Water",
    CurrentValue = false,
    Flag = "WalkOnWater",
    Callback = function(Value)
        if Value then
            -- Placeholder: define createParts() and makePartsWalkthrough() functions elsewhere
            print("Walk On Water Enabled")
            -- createParts()
            -- makePartsWalkthrough()
        else
            print("Walk On Water Disabled")
            -- revert changes if needed
        end
    end
})

-- ==========================
-- Lock Position Toggle
local lockPositionToggle = TabMain:CreateToggle({
    Name = "Lock Position",
    CurrentValue = false,
    Flag = "LockPosition",
    Callback = function(Value)
        if Value then
            local player = game.Players.LocalPlayer
            local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                local currentPos = hrp.CFrame
                getgenv().posLock = game:GetService("RunService").Heartbeat:Connect(function()
                    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        player.Character.HumanoidRootPart.CFrame = currentPos
                    end
                end)
            end
        else
            if getgenv().posLock then
                getgenv().posLock:Disconnect()
                getgenv().posLock = nil
            end
        end
    end
})

-- ==========================
-- Day Changer Toggle
local dayChangerToggle = TabMain:CreateToggle({
    Name = "Day Changer",
    CurrentValue = false,
    Flag = "DayChanger",
    Callback = function(Value)
        if game.Lighting then
            if Value then
                game.Lighting.TimeOfDay = "00:00:00" -- Midnight
            else
                game.Lighting.TimeOfDay = "12:00:00" -- Daytime
            end
        end
    end
})

-- ==========================
-- Size Changer Input
local selectedSize = "2" -- default value
local sizeInput = TabSpeedandSize:CreateInput({
    Name = "Size Changer",
    CurrentValue = "2",
    PlaceholderText = "2",
    RemoveTextAfterFocusLost = false,
    Flag = "SizeChanger",
    Callback = function(Numeric)
        selectedSize = Numeric
        if _G.AutoSize then
            game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", tonumber(selectedSize))
        end
    end
})

-- Auto Set Size Toggle
local autoSizeToggle = TabSpeedandSize:CreateToggle({
    Name = "Auto Set Size",
    CurrentValue = false,
    Flag = "AutoChangeSize",
    Callback = function(Value)
        _G.AutoSize = Value
        spawn(function()
            while _G.AutoSize do
                game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", tonumber(selectedSize))
                task.wait(0.1)
                if not _G.AutoSize then break end
            end
        end)
    end
})

-- Speed Changer Input
local selectedSpeed = "143"
local speedInput = TabSpeedandSize:CreateInput({
    Name = "Speed Changer",
    CurrentValue = "143",
    PlaceholderText = "143",
    RemoveTextAfterFocusLost = false,
    Flag = "SpeedChanger",
    Callback = function(Numeric)
        selectedSpeed = Numeric
        if _G.AutoSpeed then
            local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = tonumber(selectedSpeed)
            end
        end
    end
})

-- Auto Set Speed Toggle
local autoSpeedToggle = TabSpeedandSize:CreateToggle({
    Name = "Auto Set Speed",
    CurrentValue = false,
    Flag = "AutoSetSpeed",
    Callback = function(Value)
        _G.AutoSpeed = Value
        spawn(function()
            while _G.AutoSpeed do
                local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = tonumber(selectedSpeed)
                end
                task.wait(0.1)
                if not _G.AutoSpeed then break end
            end
        end)
    end
})

-- ==========================
-- Anti AFK Button
local ButtonAFK = TabAntiShi:CreateButton({
   Name = "Anti AFK",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/evxncodes/mainroblox/main/anti-afk", true))()
   end,
})

-- Anti Lag Button
local ButtonLag = TabAntiShi:CreateButton({
   Name = "Anti Lag", 
   Callback = function()
      for _, v in pairs(game:GetDescendants()) do
        if v:IsA("ParticleEmitter") or v:IsA("Effect") or v:IsA("Smoke") or v:IsA("Fire") or v:IsA("Explosion") then
            v:Destroy()
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v:Destroy()
        end
      end
   end,
})

-- MOHA Anti AFK | Anti Lag
local ButtonMOHA = TabAntiShi:CreateButton({
   Name = "MOHA Anti AFK | Anti Lag",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/LEGENDOX-BYMOHA/ML/refs/heads/main/anti%20lag%2Ckick%2Cafk%20.txt"))()
   end,
})

-- Ultra Lag Button
local ButtonUltraLag = TabAntiShi:CreateButton({
   Name = "MOHAS ANTI AFK | No Disable effects",
   Callback = function()
       -- Load anti-AFK script
       loadstring(game:HttpGet("https://raw.githubusercontent.com/evxncodes/mainroblox/main/anti-afk", true))()
       
       -- Disable visual effects more efficiently
       local function disableEffects()
           for _, v in ipairs(game:GetDescendants()) do
               local className = v.ClassName
               if className == "ParticleEmitter" or className == "Trail" or className == "Smoke" or className == "Fire" or className == "Sparkles" then
                   v.Enabled = false
               end
           end
       end
       
       -- Optimize lighting settings
       local function optimizeLighting()
           local lighting = game:GetService("Lighting")
           lighting.GlobalShadows = false
           lighting.FogEnd = math.huge
       end
       
       -- Reduce material and texture overhead in workspace
       local function optimizeWorkspace()
           for _, v in ipairs(workspace:GetDescendants()) do
               if v:IsA("BasePart") then
                   if not v.Parent:FindFirstChildOfClass("Humanoid") then
                       v.Material = Enum.Material.SmoothPlastic
                   end
               elseif v:IsA("Texture") then
                   v:Destroy()
               end
           end
       end
       
       -- Set rendering quality
       local function setQuality()
           local success, err = pcall(function()
               settings().Rendering.QualityLevel = 0
           end)
           if not success then
               warn("Failed to set QualityLevel:", err)
           end
       end
       
       -- Run all optimizations
       disableEffects()
       optimizeLighting()
       optimizeWorkspace()
       setQuality()
   end,
})

-- RemoveLag function placeholder (define as needed)
local function RemoveLag()
    -- Example: destroy particles, effects, etc.
    for _, v in pairs(game:GetDescendants()) do
        if v:IsA("ParticleEmitter") or v:IsA("Effect") or v:IsA("Smoke") or v:IsA("Fire") or v:IsA("Explosion") then
            v:Destroy()
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v:Destroy()
        end
    end
end

-- FPS Boost Button (assuming you want to run RemoveLag repeatedly)
local cleanupLoop
local fpsBoostActive = false -- toggle value for the button

local ButtonFPSBoost = TabAntiShi:CreateButton({
    Name = "FPS Boost",
    Callback = function()
        if not fpsBoostActive then
            -- Turn on
            fpsBoostActive = true
            RemoveLag()
            cleanupLoop = task.spawn(function()
                while fpsBoostActive do
                    wait(30)
                    RemoveLag()
                end
            end)
        else
            -- Turn off
            fpsBoostActive = false
            if cleanupLoop then
                task.cancel(cleanupLoop)
                cleanupLoop = nil
            end
        end
    end,
})

-- ==========================
-- ULTRA Combination | EVERY OPTION IN ANTI SHI AT ONCE
local UltraCombineToggle = TabAntiShi:CreateToggle({
    Name = "ULTRA Combination | EVERY OPTION IN ANTI SHI AT ONCE",
    CurrentValue = false,
    Flag = "ultracombine",
    Callback = function(Value)
        if Value then
            -- Disable effects
            for _, v in pairs(game:GetDescendants()) do
                if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Smoke") or v:IsA("Fire") or v:IsA("Sparkles") then
                    v.Enabled = false
                end
            end
            -- Lighting
            local lighting = game:GetService("Lighting")
            lighting.GlobalShadows = false
            lighting.FogEnd = 9e9
            -- Workspace parts
            for _, v in pairs(workspace:GetDescendants()) do
                if v:IsA("BasePart") and not v.Parent:FindFirstChild("Humanoid") then
                    v.Material = Enum.Material.SmoothPlastic
                end
                if v:IsA("Texture") then
                    v:Destroy()
                end
            end
            -- Set quality
            pcall(function()
                settings().Rendering.QualityLevel = 0
            end)
        end

        -- Start cleanup loop if not already
        if not getgenv().cleanupUltra then
            getgenv().cleanupUltra = true
            spawn(function()
                while getgenv().cleanupUltra do
                    wait(30)
                    RemoveLag()
                end
            end)
        end
    end
})

-- Optional: Add a toggle to stop the Ultra Ultra effect if needed

-- ==========================
-- External scripts
loadstring(game:HttpGet("https://raw.githubusercontent.com/LEGENDOX-BYMOHA/ML/refs/heads/main/anti%20lag%2Ckick%2Cafk%20.txt"))()

-- ==========================
-- Auto Eat Greenbars
local GreenBarsToggle = TabBoosters:CreateToggle({
    Name = "Auto Eat Greenbars",
    CurrentValue = false,
    Flag = "GreenBar",
    Callback = function(Value)
        _G.GreenBarsActive = Value
        spawn(function()
            while _G.GreenBarsActive do
                -- Placeholder functions, replace with actual game API
                -- Example:
                -- local inventory = game:GetPlayerInventory()
                -- for i, item in ipairs(inventory) do
                --     if item.name == "Green Bar" then
                --         game:ConsumeItem(item)
                --     end
                -- end

                -- Since actual functions are game-specific, here's a pseudocode placeholder:
                -- Replace with actual implementation
                -- For example:
                -- for _, item in pairs(game:GetService("ReplicatedStorage").Inventory:GetChildren()) do
                --     if item.Name == "Green Bar" then
                --         game:GetService("ReplicatedStorage").Events.ConsumeItem:FireServer(item)
                --     end
                -- end

                -- For demonstration, just wait
                wait(1)
            end
        end)
    end
})

-- Note: The above toggle's callback should contain your game's actual API calls to find and consume "Green Bar" items.
-- Replace the placeholder with actual code.

-- If you want to automatically call the function periodically:
-- You can also set up a timer or run it inside the spawn thread

-- Example of periodic auto-eating:
-- spawn(function()
--     while _G.GreenBarsActive do
--         -- your code to find and consume "Green Bar"
--         wait(1)
--     end
-- end)
