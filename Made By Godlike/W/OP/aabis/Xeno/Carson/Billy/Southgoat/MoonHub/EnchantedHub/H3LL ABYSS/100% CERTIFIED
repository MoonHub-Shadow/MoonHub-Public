local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "MoonHub",
   Icon = 0,
   LoadingTitle = "Best Current Script",
   LoadingSubtitle = "By Godlike",
   Theme = "Serenity",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "0",
      RememberJoins = false
   },
   KeySystem = false,
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Hello"}
   }
})

local TabMain = Window:CreateTab("Main", "rewind")
local TabSpeedandSize = Window:CreateTab("Speed and Size", "rewind")
local TabAntiShi = Window:CreateTab("Anti Shi", "rewind")
local TabBoosters = Window:CreateTab("Boosters", "rewind")
local TabAutoWeight = Window:CreateTab("Auto Weights", "rewind")
local TabAutoRebirth = Window:CreateTab("Auto Rebirth", "rewind")
local TabAutoKill = Window:CreateTab("Auto Kill", "rewind")
local TabAutoRock = Window:CreateTab("Auto Rock Normal", "rewind")
local TabAutoRockFast = Window:CreateTab("Fast Glitch", "rewind")
local TabOPtools = Window:CreateTab("OP TOOLS!!", "rewind")
local TabMisc = Window:CreateTab("Misc V1", "rewind")
local TabMiscV2 = Window:CreateTab("Misc V2", "rewind")
local TabLinkedScripts = Window:CreateTab("Linked Scripts", "rewind")
local TabDiscord = Window:CreateTab("Cool Discord Servers", "rewind")
local TabCredits = Window:CreateTab("Credits", "rewind")

-- Initialize global flags
_G.AutoSize = false
_G.AutoSpeed = false
_G.FastTools = false

-- ==========================
-- Fast Tools Button
local fastToolsButton = TabMain:CreateButton({
    Name = "Fast Tools",
    Callback = function()
        local Value = not _G.FastTools
        _G.FastTools = Value
        local defaultSpeeds = {
            {"Punch", "attackTime", Value and 0 or 0.35},
            {"Ground Slam", "attackTime", Value and 0 or 6},
            {"Stomp", "attackTime", Value and 0 or 7},
            {"Handstands", "repTime", Value and 0 or 1},
            {"Pushups", "repTime", Value and 0 or 1},
            {"Weight", "repTime", Value and 0 or 1},
            {"Situps", "repTime", Value and 0 or 1}
        }
        local player = game.Players.LocalPlayer
        local backpack = player:WaitForChild("Backpack")
        for _, toolInfo in ipairs(defaultSpeeds) do
            local tool = backpack:FindFirstChild(toolInfo[1])
            if tool and tool:FindFirstChild(toolInfo[2]) then
                tool[toolInfo[2]].Value = toolInfo[3]
            end
            local equippedTool = player.Character and player.Character:FindFirstChild(toolInfo[1])
            if equippedTool and equippedTool:FindFirstChild(toolInfo[2]) then
                equippedTool[toolInfo[2]].Value = toolInfo[3]
            end
        end
    end
})

-- ==========================
-- AutoLift Pass Button
local autoLiftButton = TabMain:CreateButton({
    Name = "Free AutoLift Pass",
    Callback = function()
        local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
        local player = game:GetService("Players").LocalPlayer
        local ownedPasses = player:FindFirstChild("ownedGamepasses") or player:WaitForChild("PlayerGui") -- fallback
        for _, gamepass in pairs(gamepassFolder:GetChildren()) do
            local value = Instance.new("IntValue")
            value.Name = gamepass.Name
            value.Value = gamepass.Value
            value.Parent = ownedPasses
        end
    end
})

-- ==========================
-- Walk On Water Toggle
local walkOnWaterToggle = TabMain:CreateToggle({
    Name = "Walk On Water",
    CurrentValue = false,
    Flag = "WalkOnWater",
    Callback = function(Value)
        if Value then
            -- Placeholder: define createParts() and makePartsWalkthrough() functions elsewhere
            print("Walk On Water Enabled")
            -- createParts()
            -- makePartsWalkthrough()
        else
            print("Walk On Water Disabled")
            -- revert changes if needed
        end
    end
})

-- ==========================
-- Lock Position Toggle
local lockPositionToggle = TabMain:CreateToggle({
    Name = "Lock Position",
    CurrentValue = false,
    Flag = "LockPosition",
    Callback = function(Value)
        if Value then
            local player = game.Players.LocalPlayer
            local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                local currentPos = hrp.CFrame
                getgenv().posLock = game:GetService("RunService").Heartbeat:Connect(function()
                    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        player.Character.HumanoidRootPart.CFrame = currentPos
                    end
                end)
            end
        else
            if getgenv().posLock then
                getgenv().posLock:Disconnect()
            end
        end
    end
})

-- ==========================
-- Day Changer Toggle
local dayChangerToggle = TabMain:CreateToggle({
    Name = "Day Changer",
    CurrentValue = false,
    Flag = "DayChanger",
    Callback = function(Value)
        if game.Lighting then
            if Value then
                game.Lighting.TimeOfDay = "00:00:00" -- Midnight
            else
                game.Lighting.TimeOfDay = "12:00:00" -- Daytime
            end
        end
    end
})

-- ==========================
-- Size Changer Input
local selectedSize = "2" -- default value
local sizeInput = TabSpeedandSize:CreateInput({
    Name = "Size Changer",
    CurrentValue = "2",
    PlaceholderText = "2",
    RemoveTextAfterFocusLost = false,
    Flag = "SizeChanger",
    Callback = function(Numeric)
        selectedSize = Numeric
        if _G.AutoSize then
            game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", tonumber(selectedSize))
        end
    end
})

-- Auto Set Size Toggle
local autoSizeToggle = TabSpeedandSize:CreateToggle({
    Name = "Auto Set Size",
    CurrentValue = false,
    Flag = "AutoChangeSize",
    Callback = function(Value)
        _G.AutoSize = Value
        spawn(function()
            while _G.AutoSize do
                game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", tonumber(selectedSize))
                task.wait(0.1)
                if not _G.AutoSize then break end
            end
        end)
    end
})

-- Speed Changer Input
local selectedSpeed = "143"
local speedInput = TabSpeedandSize:CreateInput({
    Name = "Speed Changer",
    CurrentValue = "143",
    PlaceholderText = "143",
    RemoveTextAfterFocusLost = false,
    Flag = "SpeedChanger",
    Callback = function(Numeric)
        selectedSpeed = Numeric
        if _G.AutoSpeed then
            local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = tonumber(selectedSpeed)
            end
        end
    end
})

-- Auto Set Speed Toggle
local autoSpeedToggle = TabSpeedandSize:CreateToggle({
    Name = "Auto Set Speed",
    CurrentValue = false,
    Flag = "AutoSetSpeed",
    Callback = function(Value)
        _G.AutoSpeed = Value
        spawn(function()
            while _G.AutoSpeed do
                local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = tonumber(selectedSpeed)
                end
                task.wait(0.1)
                if not _G.AutoSpeed then break end
            end
        end)
    end
})

-- ==========================
-- Auto Size Nan | Tiny Toggle
local Toggle = TabSpeedandSize:CreateToggle({
   Name = "Auto Size Nan | Tiny",
   CurrentValue = false,
   Flag = "Nan",
   Callback = function(Value)
      _G.AutoSize = Value
      spawn(function()
          while _G.AutoSize do
              game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer(
                  "changeSize",
                  -9223372036854776000 -- Very small size
              )
              task.wait(0.1)
          end
      end)
   end
})
